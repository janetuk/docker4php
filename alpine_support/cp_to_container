#!/bin/bash 
cd `dirname $0`

source ../.env
./make_id_rsa
local_ip_not_defined=`ping -c 1 -t 1 10.254.254.253 | grep 100.0%`

if [ "X$local_ip_not_defined" = "X" ] ; then
    ../rsync-setup/common/ioloopback
fi
container=${PROJECT_NAME}_php 

#sqlsrv files:
docker cp  ./install_sqlsrv ${PROJECT_NAME}_php:/tmp/install_sqlsrv
docker cp docker-php-ext-sqlsrv.ini ${PROJECT_NAME}_php:/usr/local/etc/php/conf.d/docker-php-ext-sqlsrv.ini
docker cp docker-php-ext-pdo_sqlsrv.ini ${PROJECT_NAME}_php:/usr/local/etc/php/conf.d/docker-php-ext-pdo_sqlsrv.ini
#docker exec -i my_php7_project_php /tmp/install_sqlsrv

docker cp watchman $container:/usr/local/bin/watchman
docker cp libcrypto.so.1.0.0 $container:/lib/libcrypto.so.1.0.0
docker exec --user root -i $container  mkdir /usr/local/var/run/watchman

docker cp ~/.ssh/docker-php-id_rsa $container:/tmp/docker-php-id_rsa
./render.rsa.script > /tmp/ssh.script
docker cp /tmp/ssh.script $container:/tmp/ssh.script
docker exec -i --user root $container chmod 400 /tmp/docker-php-id_rsa
docker exec -i --user root $container chmod 777 /tmp/ssh.script
docker exec -i --user root $container watchman watch /var/www/html/$syncDir
docker exec -i --user root $container watchman -- trigger  /var/www/html/$syncDir sync '**/*' -- /tmp/ssh.script
./update_authorized_keys

docker cp sync_to_nginx      ${PROJECT_NAME}_php:/root/sync
docker cp retry.php ${PROJECT_NAME}_php:${NGINX_SERVER_ROOT}/retry.php
docker cp retry.php ${PROJECT_NAME}_nginx:${NGINX_SERVER_ROOT/retry.php
docker exec -i --user root $container chmod -R 777 /root

#docker cp  ../rsync-setup/php/settings.php  ${PROJECT_NAME}_php:/var/www/html/sites/default/settings.php
#docker cp  ../rsync-setup/php/settings.local.php  ${PROJECT_NAME}_php:/var/www/html/sites/default/settings.local.php
cd ..
export CMD="chmod 777 /root/sync ; cd /var/www/html/ ; composer install ; sudo /root/sync ";  make fpmi

